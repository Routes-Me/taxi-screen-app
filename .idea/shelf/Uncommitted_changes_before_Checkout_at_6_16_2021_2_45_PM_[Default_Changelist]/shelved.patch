Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\napply plugin: 'com.google.firebase.crashlytics'\r\napply plugin: 'kotlin-android'\r\napply plugin: 'kotlin-android-extensions'\r\napply plugin: \"org.jetbrains.kotlin.kapt\"\r\nandroid {\r\n    compileSdkVersion 29\r\n    buildToolsVersion '29.0.3'\r\n    defaultConfig {\r\n        applicationId \"com.routesme.vehicles\"\r\n        minSdkVersion 26\r\n        targetSdkVersion 29\r\n        versionCode 29\r\n        versionName \"3.6\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n        multiDexEnabled true\r\n        consumerProguardFiles 'proguard-consumer-rules.pro'\r\n        buildConfigField \"int\", \"OAUTH_RE_AUTH_RETRY_LIMIT\", '1'\r\n\r\n        javaCompileOptions {\r\n            annotationProcessorOptions {\r\n                arguments = [\"room.schemaLocation\": \"$projectDir/schemas\".toString()]\r\n            }\r\n        }\r\n        kotlinOptions {\r\n            jvmTarget = \"1.8\"\r\n        }\r\n    }\r\n/*\r\n    buildTypes {\r\n        debug {\r\n            minifyEnabled true\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), \"proguard-rules.pro\"\r\n        }\r\n        release {\r\n            minifyEnabled true\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), \"proguard-rules.pro\"\r\n\r\n        }\r\n    }\r\n    */\r\n\r\n    lintOptions {\r\n        checkReleaseBuilds false\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n\r\n\r\n    flavorDimensions 'default'\r\n    productFlavors {\r\n        taxi {\r\n            dimension 'default'\r\n            applicationId \"com.routesme.vehicles\"\r\n            applicationIdSuffix \".taxi\"\r\n            versionCode 37\r\n            versionName \"4.4\"\r\n        }\r\n\r\n        bus {\r\n            dimension 'default'\r\n            applicationId \"com.routesme.vehicles\"\r\n            applicationIdSuffix \".bus\"\r\n            versionCode 1\r\n            versionName \"1.0\"\r\n        }\r\n    }\r\n    sourceSets {\r\n        bus {\r\n            res.srcDirs = ['src/bus/res', 'src/bus/res/']\r\n            java.srcDirs = ['src/bus/java', 'src/bus/java/']\r\n        }\r\n        taxi {\r\n            res.srcDirs = ['src/taxi/res', 'src/taxi/res/']\r\n            java.srcDirs = ['src/taxi/java', 'src/taxi/java/']\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'com.android.support:design:29.0.3'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'androidx.recyclerview:recyclerview:1.1.0'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    implementation 'com.android.support:multidex:1.0.3'\r\n    //Kotlin ...\r\n    implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version\"\r\n    //Firebase Crashlytics\r\n    implementation 'com.google.firebase:firebase-core:17.5.0'\r\n    implementation 'com.google.firebase:firebase-crashlytics:17.2.2'\r\n    implementation 'com.google.firebase:firebase-analytics:17.5.0'\r\n    //View Images\r\n    implementation 'com.github.bumptech.glide:glide:4.11.0'\r\n    kapt 'com.github.bumptech.glide:compiler:4.11.0'\r\n    // Zxing barcode dependency\r\n    implementation 'com.google.zxing:core:3.3.3'\r\n    implementation 'com.github.illiashenkoo:glide-barcode:0.0.1'\r\n    implementation 'com.pixplicity.sharp:library:1.1.0'\r\n    //Pattern Lock View Library.. For PassCode Authentication..\r\n    implementation 'com.andrognito.patternlockview:patternlockview:1.0.0'\r\n    //Ring Progress Bar for videoView ...\r\n    implementation 'com.github.HotBitmapGG:RingProgressBar:V1.2.3'\r\n    //Show & hide password editText Library\r\n    implementation 'com.github.scottyab:showhidepasswordedittext:0.8'\r\n    //Hotspot Configuration...\r\n    implementation 'com.linkedin.dexmaker:dexmaker:2.25.0'\r\n    //Spots progress dialog\r\n    implementation 'com.github.d-max:spots-dialog:1.1@aar'\r\n    //retrofit\r\n    implementation 'com.squareup.okhttp3:okhttp:3.14.4'\r\n    implementation 'com.squareup.retrofit2:retrofit:2.7.1'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.7.1'\r\n    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'\r\n    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'\r\n    implementation 'com.google.code.gson:gson:2.8.6'\r\n    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.4'\r\n    //RxJave\r\n    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'\r\n    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'\r\n    implementation 'com.jakewharton.rxbinding:rxbinding:0.4.0'\r\n    //MVVM Architecture\r\n    kapt \"android.arch.lifecycle:compiler:1.1.1\"\r\n    implementation \"androidx.lifecycle:lifecycle-extensions:2.2.0\"\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'\r\n    implementation 'androidx.fragment:fragment-ktx:1.2.5'\r\n    implementation \"android.arch.lifecycle:viewmodel:1.1.1\"\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    //Location tracking service by kotlin ...\r\n    //Location Listener\r\n    implementation 'com.google.android.gms:play-services-maps:17.0.0'\r\n    implementation 'com.google.android.gms:play-services-location:17.1.0'\r\n    //noinspection GradleDynamicVersion\r\n    implementation 'com.google.maps.android:android-maps-utils:0.4+'\r\n    //1-Room database\r\n    //noinspection GradleDependency\r\n    implementation \"androidx.room:room-runtime:$room_version\"\r\n    implementation \"androidx.legacy:legacy-support-v4:1.0.0\"\r\n    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'\r\n    kapt \"androidx.room:room-compiler:$room_version\"\r\n    implementation \"androidx.room:room-ktx:$room_version\"\r\n    implementation \"android.arch.persistence.room:runtime:1.1.1\"\r\n    kapt \"android.arch.persistence.room:compiler:1.1.1\"\r\n    implementation 'com.microsoft.signalr:signalr:3.0.0'\r\n    implementation 'org.slf4j:slf4j-jdk14:1.7.25'\r\n    //Exoplayer\r\n    implementation 'com.google.android.exoplayer:exoplayer:2.12.1'\r\n    implementation 'com.google.android.exoplayer:exoplayer-core:2.12.1'\r\n    implementation 'com.google.android.exoplayer:exoplayer-dash:2.12.1'\r\n    implementation 'com.google.android.exoplayer:exoplayer-ui:2.12.1'\r\n    implementation 'org.greenrobot:eventbus:3.0.0'\r\n    implementation 'com.intuit.sdp:sdp-android:1.0.5'\r\n    implementation 'com.intuit.ssp:ssp-android:1.0.6'\r\n\r\n\r\n    implementation 'tk.zielony:carbon:0.16.0.1'\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.6'\r\n    implementation 'android.arch.work:work-runtime:1.0.1'\r\n    //Gif imageView\r\n    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.18'\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 29a430b16f87d06521584a9a71da80d102203ed7)
+++ app/build.gradle	(date 1623842956728)
@@ -50,15 +50,14 @@
         targetCompatibility JavaVersion.VERSION_1_8
     }
 
-
     flavorDimensions 'default'
     productFlavors {
         taxi {
             dimension 'default'
             applicationId "com.routesme.vehicles"
             applicationIdSuffix ".taxi"
-            versionCode 37
-            versionName "4.4"
+            versionCode 39
+            versionName "4.7"
         }
 
         bus {
Index: app/src/main/res/raw/config.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>routesWebsiteUrl=http://www.routesme.com/\r\nexitPassword = 043726518\r\n\r\nProduction\r\nbaseUrl=https://api.routesme.com/v1.0/\r\ntrackingWebSocketAuthorityUrl=location.hubs.routesme.com\r\n\r\nStaging\r\n//baseUrl=https://stage.api.routesme.com/v1.0/\r\n//trackingWebSocketAuthorityUrl=stage.location.hubs.routesme.com
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- app/src/main/res/raw/config.properties	(revision 29a430b16f87d06521584a9a71da80d102203ed7)
+++ app/src/main/res/raw/config.properties	(date 1623834933693)
@@ -2,9 +2,9 @@
 exitPassword = 043726518
 
 Production
-baseUrl=https://api.routesme.com/v1.0/
-trackingWebSocketAuthorityUrl=location.hubs.routesme.com
+//baseUrl=https://api.routesme.com/v1.0/
+//trackingWebSocketAuthorityUrl=location.hubs.routesme.com
 
 Staging
-//baseUrl=https://stage.api.routesme.com/v1.0/
-//trackingWebSocketAuthorityUrl=stage.location.hubs.routesme.com
\ No newline at end of file
+baseUrl=https://stage.api.routesme.com/v1.0/
+trackingWebSocketAuthorityUrl=stage.location.hubs.routesme.com
\ No newline at end of file
Index: app/taxi/release/output.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[{\"outputType\":{\"type\":\"APK\"},\"apkData\":{\"type\":\"MAIN\",\"splits\":[],\"versionCode\":37,\"versionName\":\"4.4\",\"enabled\":true,\"outputFile\":\"app-taxi-release.apk\",\"fullName\":\"taxiRelease\",\"baseName\":\"taxi-release\"},\"path\":\"app-taxi-release.apk\",\"properties\":{}}]
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/taxi/release/output.json	(revision 29a430b16f87d06521584a9a71da80d102203ed7)
+++ app/taxi/release/output.json	(date 1623834981096)
@@ -1,1 +1,1 @@
-[{"outputType":{"type":"APK"},"apkData":{"type":"MAIN","splits":[],"versionCode":37,"versionName":"4.4","enabled":true,"outputFile":"app-taxi-release.apk","fullName":"taxiRelease","baseName":"taxi-release"},"path":"app-taxi-release.apk","properties":{}}]
\ No newline at end of file
+[{"outputType":{"type":"APK"},"apkData":{"type":"MAIN","splits":[],"versionCode":38,"versionName":"4.5","enabled":true,"outputFile":"app-taxi-release.apk","fullName":"taxiRelease","baseName":"taxi-release"},"path":"app-taxi-release.apk","properties":{}}]
\ No newline at end of file
Index: app/src/taxi/java/com/routesme/vehicles/service/VideoService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.routesme.vehicles.service\r\n\r\nimport android.app.Service\r\nimport android.content.Intent\r\nimport android.os.Binder\r\nimport android.os.IBinder\r\nimport android.util.Log\r\nimport androidx.annotation.Nullable\r\nimport com.google.android.exoplayer2.*\r\nimport com.google.android.exoplayer2.source.MediaSource\r\nimport com.google.android.exoplayer2.source.ProgressiveMediaSource\r\nimport com.google.android.exoplayer2.upstream.DataSource\r\nimport com.google.android.exoplayer2.upstream.DefaultAllocator\r\nimport com.google.android.exoplayer2.upstream.DefaultHttpDataSourceFactory\r\nimport com.google.android.exoplayer2.upstream.cache.CacheDataSource\r\nimport com.google.android.exoplayer2.util.Util\r\nimport com.routesme.vehicles.R\r\nimport com.routesme.vehicles.data.model.Data\r\nimport com.routesme.vehicles.helper.AdvertisementsHelper\r\nimport com.routesme.vehicles.helper.DateHelper\r\nimport com.routesme.vehicles.room.AdvertisementDatabase\r\nimport com.routesme.vehicles.room.helper.DatabaseHelperImpl\r\nimport com.routesme.vehicles.room.viewmodel.RoomDBViewModel\r\nimport com.routesme.vehicles.view.events.AnimateVideo\r\nimport com.routesme.vehicles.view.events.DemoVideo\r\nimport com.routesme.vehicles.view.utils.Type\r\nimport kotlinx.coroutines.CoroutineScope\r\nimport kotlinx.coroutines.MainScope\r\nimport org.greenrobot.eventbus.EventBus\r\n\r\n\r\nclass VideoService : Service(), CoroutineScope by MainScope() {\r\n    var onStartMedia = true\r\n    private lateinit var exoPlayer: SimpleExoPlayer\r\n    var currentMediaItemId = 0\r\n    private var count = 0\r\n    private var isPlayingDemoVideo = false\r\n    private lateinit var viewModel: RoomDBViewModel\r\n    override fun onBind(intent: Intent?): IBinder? {\r\n\r\n        exoPlayer.playWhenReady = true\r\n        setMediaPlayer(intent?.getSerializableExtra(\"video_list\") as List<Data>)\r\n        return VideoServiceBinder()\r\n\r\n    }\r\n\r\n    inner class VideoServiceBinder : Binder() {\r\n\r\n        /**\r\n         * This method should be used only for setting the exoplayer instance.\r\n         * If exoplayer's internal are altered or accessed we can not guarantee\r\n         * things will work correctly.\r\n         */\r\n        fun getExoPlayerInstance() = exoPlayer\r\n    }\r\n\r\n    override fun onCreate() {\r\n        super.onCreate()\r\n        exoPlayer = SimpleExoPlayer.Builder(this).setLoadControl(getLoadControl()).build()\r\n        AdvertisementsHelper.instance.deleteCache()\r\n        viewModel = RoomDBViewModel(DatabaseHelperImpl(AdvertisementDatabase.invoke(this)))\r\n    }\r\n\r\n    private fun getLoadControl(): DefaultLoadControl {\r\n\r\n        val loadControl = DefaultLoadControl.Builder()\r\n                .setAllocator(DefaultAllocator(true, C.DEFAULT_BUFFER_SEGMENT_SIZE))\r\n                .setBufferDurationsMs(\r\n                        DefaultLoadControl.DEFAULT_MIN_BUFFER_MS,  // this is it!\r\n                        DefaultLoadControl.DEFAULT_MAX_BUFFER_MS,\r\n                        DefaultLoadControl.DEFAULT_BUFFER_FOR_PLAYBACK_MS,\r\n                        DefaultLoadControl.DEFAULT_BUFFER_FOR_PLAYBACK_AFTER_REBUFFER_MS\r\n                )\r\n                .setTargetBufferBytes(DefaultLoadControl.DEFAULT_TARGET_BUFFER_BYTES)\r\n                .setPrioritizeTimeOverSizeThresholds(DefaultLoadControl.DEFAULT_PRIORITIZE_TIME_OVER_SIZE_THRESHOLDS)\r\n                .createDefaultLoadControl()\r\n\r\n        return loadControl\r\n    }\r\n\r\n    fun setMediaPlayer(list: List<Data>) {\r\n\r\n        exoPlayer.apply {\r\n            setMediaSources(getMediaSource(list))\r\n            repeatMode = Player.REPEAT_MODE_ALL\r\n            playWhenReady = true\r\n            prepare()\r\n            play()\r\n            volume = 0f\r\n            addListener(object : Player.EventListener {\r\n\r\n                override fun onMediaItemTransition(@Nullable mediaItem: MediaItem?, @Player.MediaItemTransitionReason reason: Int) {\r\n                    currentMediaItemId = exoPlayer.currentPeriodIndex\r\n                    if (currentMediaItemId == 0) currentMediaItemId = list.size - 1 else currentMediaItemId = currentMediaItemId - 1\r\n                    currentMediaItemId.let {\r\n                        val video =  list[it]\r\n                        video.contentId?.let {\r\n                            viewModel.insertLog(it, video.resourceNumber!!, DateHelper.instance.getCurrentDate(), DateHelper.instance.getCurrentPeriod(), Type.VIDEO.media_type)\r\n                        }\r\n                    }\r\n                    EventBus.getDefault().post(AnimateVideo(true, exoPlayer.currentPeriodIndex))\r\n                }\r\n\r\n                override fun onPlayerStateChanged(playWhenReady: Boolean, playbackState: Int) {\r\n                    when (playbackState) {\r\n                        Player.STATE_IDLE -> {\r\n\r\n                            exoPlayer.prepare()\r\n                            exoPlayer.playbackState\r\n\r\n                        }\r\n                        Player.STATE_BUFFERING -> {\r\n\r\n                            count++\r\n                            if (count >= 5) {\r\n                                count = 0\r\n                                EventBus.getDefault().post(DemoVideo(true, \"NO VIDEO CACHE\"))\r\n                                isPlayingDemoVideo = true\r\n                            }\r\n\r\n                        }\r\n                        Player.STATE_READY -> {\r\n                            if (isPlayingDemoVideo) {\r\n                                EventBus.getDefault().post(DemoVideo(false, \"\"))\r\n                                isPlayingDemoVideo = false\r\n                            }\r\n                            count = 0\r\n\r\n                        }\r\n                        Player.STATE_ENDED -> {\r\n\r\n                        }\r\n                    }\r\n                }\r\n\r\n                override fun onPlayerError(error: ExoPlaybackException) {\r\n                    when (error.type) {\r\n                        ExoPlaybackException.TYPE_SOURCE -> {\r\n                            Log.e(\"ExoPlayer\", \"TYPE_SOURCE\")\r\n                            moveToNextVideo()\r\n                            prepare()\r\n                        }\r\n                        ExoPlaybackException.TYPE_RENDERER -> {\r\n                            moveToNextVideo()\r\n                            prepare()\r\n                            Log.e(\"ExoPlayer\", \"TYPE_RENDERER\")\r\n                        }\r\n                        ExoPlaybackException.TYPE_UNEXPECTED -> {\r\n                            moveToNextVideo()\r\n                            Log.e(\"ExoPlayer\", \"TYPE_UNEXPECTED\")\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    private fun moveToNextVideo(){\r\n        exoPlayer.seekTo(exoPlayer.nextWindowIndex, 0)\r\n    }\r\n\r\n    fun getMediaSource(videos: List<Data>): MutableList<MediaSource> {\r\n        var mediaSource = ArrayList<MediaSource>()\r\n        val dataSourceFactory: DataSource.Factory = CacheDataSource.Factory().setCache(AdvertisementsHelper.simpleCache).setUpstreamDataSourceFactory(DefaultHttpDataSourceFactory(Util.getUserAgent(this, getString(R.string.app_name)))).setFlags(CacheDataSource.FLAG_IGNORE_CACHE_ON_ERROR)\r\n        videos.let { videos ->\r\n            for (video in videos) {\r\n                val mediaSourceItem = ProgressiveMediaSource.Factory(dataSourceFactory).createMediaSource(MediaItem.fromUri(video.url!!))\r\n                mediaSource.add(mediaSourceItem)\r\n            }\r\n            return mediaSource\r\n        }\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n        exoPlayer.release()\r\n        stopSelf()\r\n    }\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/taxi/java/com/routesme/vehicles/service/VideoService.kt	(revision 29a430b16f87d06521584a9a71da80d102203ed7)
+++ app/src/taxi/java/com/routesme/vehicles/service/VideoService.kt	(date 1623834462377)
@@ -45,7 +45,6 @@
     }
 
     inner class VideoServiceBinder : Binder() {
-
         /**
          * This method should be used only for setting the exoplayer instance.
          * If exoplayer's internal are altered or accessed we can not guarantee
@@ -74,7 +73,6 @@
                 .setTargetBufferBytes(DefaultLoadControl.DEFAULT_TARGET_BUFFER_BYTES)
                 .setPrioritizeTimeOverSizeThresholds(DefaultLoadControl.DEFAULT_PRIORITIZE_TIME_OVER_SIZE_THRESHOLDS)
                 .createDefaultLoadControl()
-
         return loadControl
     }
 
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_6_6_2021_2_12_PM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_6_6_2021_2_12_PM__Default_Changelist_.xml
